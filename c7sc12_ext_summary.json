{"cluster": 7, "subcluster": 12, "abstract_summ": "In particular, we provide insights on how we addressed the adaptive features (the adaptive high beam headlights and the adaptive cruise control) by explicitly modelling their software control loops according to the MAPE-K (Monitor-Analyse-Plan-Execute over a shared Knowledge) reference control model for self-adaptive systems.In this paper, we overview our experiences of developing large set of open source tools in ECSEL JU European project called MegaM@Rt2 whose main objective is to propose a scalable model-based framework incorporating methods and tools for the continuous development and runtime support of complex software-intensive Cyber-Physical Systems (CPSs).These software-based features demand software engineering approaches and formal methods that are able to guarantee correct operation, since malfunctions may cause harm/damage.This paper reports on the development and validation of a formal model for an automotive adaptive exterior lights system (ELS) with multiple variants in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic.In the context of automotive domain, modern control systems are software-intensive and have adaptive features to provide safety and comfort.", "title_summ": "MegaM@Rt2 EU Project: Open Source Tools for Mega-Modelling at Runtime of CPSsEvent-B: From Systems to Sub-systems ModelingModelling an Automotive Software-Intensive System with Adaptive Features Using ASMETAA Formal Approach for the Modeling of High-Level Architectures Aligned with System RequirementsA Verified Low-Level Implementation of the Adaptive Exterior Light and Speed Control SystemModelling and Validating an Automotive System in Classical B and Event-BValidating Multiple Variants of an Automotive Light System with Electrum", "title_abstract_phrases": "In particular, we provide insights on how we addressed the adaptive features (the adaptive high beam headlights and the adaptive cruise control) by explicitly modelling their software control loops according to the MAPE-K (Monitor-Analyse-Plan-Execute over a shared Knowledge) reference control model for self-adaptive systems.Modelling an Automotive Software-Intensive System with Adaptive Features Using ASMETAIn the context of automotive domain, modern control systems are software-intensive and have adaptive features to provide safety and comfort.Validating Multiple Variants of an Automotive Light System with ElectrumThis paper reports on the development and validation of a formal model for an automotive adaptive exterior lights system (ELS) with multiple variants in Electrum, a lightweight formal specification language that extends Alloy with mutable relations and temporal logic.MegaM@Rt2 EU Project: Open Source Tools for Mega-Modelling at Runtime of CPSsIn this paper, we overview our experiences of developing large set of open source tools in ECSEL JU European project called MegaM@Rt2 whose main objective is to propose a scalable model-based framework incorporating methods and tools for the continuous development and runtime support of complex software-intensive Cyber-Physical Systems (CPSs).These software-based features demand software engineering approaches and formal methods that are able to guarantee correct operation, since malfunctions may cause harm/damage."}