{"cluster": 7, "subcluster": 33, "abstract_summ": "To overcome the practical limitations of partial-order runs of \u2018distributed ASMs\u2019 (Abstract State Machines) proposed by Gurevich, we have defined a concept of concurrent runs of multi-agent ASMs and could show that concurrent ASMs capture a natural language-independent axiomatic definition of concurrent algorithms, thus generalising Gurevich\u2019s seminal \u2018Sequential ASM Thesis\u2019 from sequential to concurrent algorithms.However, we remained intrigued by the fact that Blass and Gurevich used partial-order runs of distributed ASMs to explain runs of sequential recursive algorithms.Recently a behavioural theory of reflective algorithms has been developed, which shows that they are captured by reflective abstract state machines (rASMs).We discovered that also the inverse simulation holds: for every distributed ASM with partial order runs, these runs can be described by runs of a sequential recursive algorithm.First, we provide BPP nets with various causality-based equivalences, notably a novel one, called causal-net bisimilarity, and (a version of) fully-concurrent bisimilarity [3].", "title_summ": "A Logic for Reflective ASMsA Characterization of Distributed ASMs with Partial-Order RunsAdding Concurrency to a Sequential Refinement TowerA Programmer\u2019s Text Editor for a Logical Theory: The SUMOjEdit Editor (System Description)A CTL* Model Checker for Petri NetsStructural Reductions RevisitedA Study on Team Bisimulations for BPP Nets", "title_abstract_phrases": "A Characterization of Distributed ASMs with Partial-Order RunsTo overcome the practical limitations of partial-order runs of \u2018distributed ASMs\u2019 (Abstract State Machines) proposed by Gurevich, we have defined a concept of concurrent runs of multi-agent ASMs and could show that concurrent ASMs capture a natural language-independent axiomatic definition of concurrent algorithms, thus generalising Gurevich\u2019s seminal \u2018Sequential ASM Thesis\u2019 from sequential to concurrent algorithms.However, we remained intrigued by the fact that Blass and Gurevich used partial-order runs of distributed ASMs to explain runs of sequential recursive algorithms.Recently a behavioural theory of reflective algorithms has been developed, which shows that they are captured by reflective abstract state machines (rASMs).We discovered that also the inverse simulation holds: for every distributed ASM with partial order runs, these runs can be described by runs of a sequential recursive algorithm.The key is the introduction of terms that are interpreted by ASM rules stored in some location."}