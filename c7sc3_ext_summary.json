{"cluster": 7, "subcluster": 3, "abstract_summ": "In a proof-of-concept implementation, we demonstrate that the pre-processing of VMI events in the Xen hypervisor reduces the monitoring overhead for the use case of VMI-based process-bound monitoring by a factor of 18.Low-code application development as proposed by the OutSystems Platform enables fast mobile and desktop application development and deployment.It hinges on visual development of the interface and business logic but also on easy integration with data stores and services while delivering robust applications that scale.The leakage model is commonly generated with traces from an \u201copen device\u201d, assuming that a model which works for one device should work for another copy as well.The general idea is to run multiple different variants of the same program alongside each other while monitoring their diverging behavior on a malicious input.Existing NVX systems execute diversified program variants on a single host.", "title_summ": "Towards Hypervisor Support for Enhancing the Performance of Virtual Machine IntrospectionBuilding a Polyglot Data Access Layer for a Low-Code Application Development Platform:Another Look at PortabilityDistributed Heterogeneous N-Variant ExecutionInvestigating Transactional Memory for High Performance(Experience Report)When Similarities Among Devices are Taken for Granted:Embedded Systems", "title_abstract_phrases": "In a proof-of-concept implementation, we demonstrate that the pre-processing of VMI events in the Xen hypervisor reduces the monitoring overhead for the use case of VMI-based process-bound monitoring by a factor of 18.Building a Polyglot Data Access Layer for a Low-Code Application Development Platform: (Experience Report)Low-code application development as proposed by the OutSystems Platform enables fast mobile and desktop application development and deployment.It hinges on visual development of the interface and business logic but also on easy integration with data stores and services while delivering robust applications that scale.The leakage model is commonly generated with traces from an \u201copen device\u201d, assuming that a model which works for one device should work for another copy as well.In this paper we report on building a polyglot data access layer for the OutSystems Platform that uses SQL with optional embedded script snippets to bridge the gap between low-code and full access to NoSQL stores.Another Look at PortabilityThe original idea of profiling implies attacking one device with a leakage model generated from an \u201cidentical copy\u201d, but this concept cannot be always enforced."}