{"cluster": 7, "subcluster": 4, "abstract_summ": "In this paper, we transfer the principle of durable concurrent correctness to the area of software transactional memory (STM).So far, this has lead to the design of a number of persistent concurrent data structures, built to satisfy an associated notion of correctness: durable linearizability.Third, we design a proof technique for durable opacity based on refinement between TML and an operational characterisation of durable opacity by adapting the TMS2 specification.The expected ubiquity of NVM has stimulated interest in the design of novel concepts ensuring correctness of concurrent programming abstractions in the face of persistency.Like linearizability for concurrent data structures, opacity is the established notion of correctness for STMs.", "title_summ": "Handling Impossible Derivations During Stream ReasoningA Comparison of Message Exchange Patterns in BFT Protocols: (Experience Report)Defining and Verifying Durable Opacity: Correctness for Persistent Software Transactional MemoryTowards a Formal Account for Software Transactional Memory", "title_abstract_phrases": "In this paper, we transfer the principle of durable concurrent correctness to the area of software transactional memory (STM).Towards a Formal Account for Software Transactional MemorySoftware transactional memory (STM) is a concurrency control mechanism for shared memory systems.So far, this has lead to the design of a number of persistent concurrent data structures, built to satisfy an associated notion of correctness: durable linearizability.Defining and Verifying Durable Opacity: Correctness for Persistent Software Transactional MemoryNon-volatile memory (NVM), aka persistent memory, is a new paradigm for memory that preserves its contents even after power loss.Third, we design a proof technique for durable opacity based on refinement between TML and an operational characterisation of durable opacity by adapting the TMS2 specification."}