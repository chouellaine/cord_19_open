{"cluster": 7, "subcluster": 35, "abstract_summ": "In this paper we focus on a particular type of splicing systems, called (i, j) semi-simple splicing systems, [Formula: see text] and [Formula: see text], wherein all splicing rules r have the property that the two strings in positions i and j in r are singleton letters, while the other two strings are empty.We prove a time hierarchy theorem for sublinear-time ACA classes, analyze their intersection with the regular languages, and, finally, establish strict inclusions in the parallel computation classes [Formula: see text] and (uniform) [Formula: see text].We consider semi-simple splicing systems where the axiom set is a regular language, and investigate the descriptional complexity of such systems in terms of the size of the minimal deterministic finite automata that recognize the languages they generate.We show that constant sweep bounded [Formula: see text]s and [Formula: see text]s accept all and only regular languages.The problem takes a regular language as input and asks whether it belongs to [Formula: see text].", "title_summ": "The Covering ApproachThe Power of Programs over Monoids in [Image: see text]Descriptional Complexity of Semi-simple Splicing SystemsThe State Complexity of Lexicographically Smallest Words and Computing SuccessorsOperations on Permutation AutomataSublinear-Time Language Recognition and Decision by One-Dimensional Cellular AutomataOn the Balancedness of Tree-to-Word TransducersDeterministic and Nondeterministic Iterated Uniform Finite-State Transducers: Computational and Descriptional PowerOn the High Complexity of Petri Nets [Formula: see text]-LanguagesDeciding Classes of Regular Languages:", "title_abstract_phrases": "We prove a time hierarchy theorem for sublinear-time ACA classes, analyze their intersection with the regular languages, and, finally, establish strict inclusions in the parallel computation classes [Formula: see text] and (uniform) [Formula: see text].We consider semi-simple splicing systems where the axiom set is a regular language, and investigate the descriptional complexity of such systems in terms of the size of the minimal deterministic finite automata that recognize the languages they generate.We show that those programs actually can recognise all languages from a class of restricted dot-depth one languages, using a non-trivial trick, and conjecture that this class suffices to characterise the regular languages recognised by programs over monoids in [Image: see text].Descriptional Complexity of Semi-simple Splicing SystemsSplicing systems are generative mechanisms introduced by Tom Head in 1987 to model the biological process of DNA recombination.We show that constant sweep bounded [Formula: see text]s and [Formula: see text]s accept all and only regular languages.In this paper we focus on a particular type of splicing systems, called (i, j) semi-simple splicing systems, [Formula: see text] and [Formula: see text], wherein all splicing rules r have the property that the two strings in positions i and j in r are singleton letters, while the other two strings are empty."}