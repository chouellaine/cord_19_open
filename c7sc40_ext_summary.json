{"cluster": 7, "subcluster": 40, "abstract_summ": "The behavior of various kinds of dynamic systems can be formalized using typed attributed graph transformation systems (GTSs).Despite its expressivity, the macro system is simple enough that it can easily be integrated into other systems.We report on the new version of mu-term, a tool for proving termination properties of variants of rewrite systems, including conditional, context-sensitive, equational, and order-sorted rewrite systems.The states of these systems are then modelled using graphs and the evolution of the system from one state to another is described by a finite set of graph transformation rules.We take ideas from the Scheme family of programming languages and solve these two problems simultaneously by proposing a novel hygienic macro system custom-built for ITPs.", "title_summ": "Trace Equivalence and Epistemic Logic to Express Security PropertiesConditional BigraphsInitial Conflicts for Transformation Rules with Nested Application ConditionsFormal Verification of Invariants for Attributed Graph Transformation Systems Based on Nested Attributed Graph ConditionsTeaching Automated Theorem Proving by Example: PyRes 1.2: (System Description)mu-term: Verify Termination Properties Automatically (System Description)Implementing Superposition in iProver (System Description)Sequoia: A Playground for Logicians: (System Description)Beyond Notations: Hygienic Macro Expansion for Theorem Proving LanguagesValidating Mathematical StructuresSNexpression: A Symbolic Calculator for Symmetric Net ExpressionsPossible Models Computation and Revision \u2013 A Practical ApproachPrototyping Controlled Mathematical Languages in JupyterNotebooks", "title_abstract_phrases": "Formal Verification of Invariants for Attributed Graph Transformation Systems Based on Nested Attributed Graph ConditionsThe behavior of various kinds of dynamic systems can be formalized using typed attributed graph transformation systems (GTSs).Despite its expressivity, the macro system is simple enough that it can easily be integrated into other systems.However, the implementation seems to be sound and complete.mu-term: Verify Termination Properties Automatically (System Description)We report on the new version of mu-term, a tool for proving termination properties of variants of rewrite systems, including conditional, context-sensitive, equational, and order-sorted rewrite systems.The states of these systems are then modelled using graphs and the evolution of the system from one state to another is described by a finite set of graph transformation rules.We take ideas from the Scheme family of programming languages and solve these two problems simultaneously by proposing a novel hygienic macro system custom-built for ITPs."}